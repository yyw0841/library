/**
 * 左边乘积*右边乘积
 */

int* productExceptSelf(int* nums, int numsSize, int* returnSize)
{
    // left数组存储左边乘积， left[i] 表示 nums[0]~nums[i-1] 的乘积
    int *left=(int *)malloc(sizeof(int)*numsSize);
	// right数组存储右边乘积， right[i] 表示 nums[i+1]~nums[numsSize-1] 的乘积
    int *right=(int *)malloc(sizeof(int)*numsSize);
    int leftOut = 1;
    int rightOut = 1;
    for (int i = 0; i < numsSize; ++i) {
        left[i] = leftOut;  
        right[numsSize - i - 1] = rightOut;
        leftOut *= nums[i];
        rightOut *= nums[numsSize - i - 1];
    }
    *returnSize = numsSize;
    for(int i = 0; i < numsSize; i++){
        nums[i] = left[i] * right[i];
    }
    return nums;
}
